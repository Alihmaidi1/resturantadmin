
extend type Mutation{

    addresturant(address:String,name:String):Resturant @guard @validator @can(model:"App\\Models\\resturant",ability:"resturant")
    editresturant(id:ID,name:String,address:String):Resturant @guard @validator @can(model:"App\\Models\\resturant",ability:"resturant")
    deleteresturant(id:ID):Resturant @guard @validator @can(model:"App\\Models\\resturant",ability:"resturant")



}

type Query{

    findresturant(id:ID):Resturant @validator
    getallresturant:[Resturant_without_message!]
    chats:[Chat] @hasMany

}

 type Resturant{
    id:ID
    address:String
    storehouses:[storehouse] @hasMany
    tables: [table] @hasMany
    name:String
    employees:[Employee] @hasMany
    # chats: [Chat] @hasMany
    foods:[Food] @hasMany
    currencies:[Currency] @hasMany
    jobs:[Job] @hasMany
    employeeExperiences:[Experience] @hasMany
    categories:[Category] @hasMany
    tabletypes:[tabletype] @hasMany
    goods: [Good] @hasMany
    sliders:[Slider] @hasMany
    banner:[Banner] @hasMany
    setting:Setting @hasOne
    message:String
}


type Resturant_without_message{

    id:ID
    address:String
    storehouses:[storehouse] @hasMany
    tables: [table] @hasMany
    name:String
    employees:[Employee] @hasMany
    # chats: [Chat] @hasMany
    foods:[Food] @hasMany
    currencies:[Currency] @hasMany
    jobs:[Job] @hasMany
    employeeExperiences:[Experience] @hasMany
    categories:[Category] @hasMany
    tabletypes:[tabletype] @hasMany
    goods: [Good] @hasMany
    sliders:[Slider] @hasMany
    banner:[Banner] @hasMany
    setting:Setting @hasOne
    aws: Aws @hasOne
}


