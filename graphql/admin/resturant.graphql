
extend type Mutation{
    addresturant(name:String,domain:String):Resturant  @validator @guard @middleware(value:"system") @can(model:"App\\Models\\resturant",ability:"resturant")
    editresturant(id:ID,name:String,address:String,domain:String):Resturant @guard @middleware(value:"system") @validator @can(model:"App\\Models\\resturant",ability:"resturant")
    deleteresturant(id:ID):Resturant @guard @validator @middleware(value:"system") @can(model:"App\\Models\\resturant",ability:"resturant")
}

type Query{

    findresturant(id:ID):Resturant @validator @middleware(value:"system") @can(model:"App\\Models\\resturant",ability:"resturant")
    getallresturant:[Resturant_without_message!] @middleware(value:"system") @can(model:"App\\Models\\resturant",ability:"resturant")
    chats:[Chat] @hasMany

}

 type Resturant{
    id:ID
    domain:String
    name:String
    # chats: [Chat] @hasMany
    message:String
    aws: Aws @hasOne


}


type Resturant_without_message{

    id:ID
    domain:String
    name:String
    aws: Aws @hasOne
}




type Aws{

    id:ID
    aws_access_key:String
    aws_secret_access:String
    aws_region:String
    aws_bucket:String
    resturant:Resturant @belongsTo

}
